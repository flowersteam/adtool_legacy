# docker-compose.yml

version: '3' # TODO
services:
##### APP DB #####
  app-db:
    image: postgres
    ports:
      - "$APP_DB_PORT:5432"
    hostname: app-db
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - "./AppDB/saved_data:/var/lib/postgresql/data"
      - "./AppDB/init_scripts:/docker-entrypoint-initdb.d"
  app-db-api:
    image: postgrest/postgrest:v7.0.1
    ports:
      - "$APP_DB_API_PORT:3000"
    environment:
      PGRST_DB_URI: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@app-db:$APP_DB_PORT/$POSTGRES_DB
      PGRST_DB_SCHEMA: $PGRST_DB_SCHEMA
      PGRST_DB_ANON_ROLE: $PGRST_DB_ANON_ROLE
      PGRST_SERVER_PROXY_URI: "http://127.0.0.1:3000"
    depends_on:
      - app-db
##### EXPE DB #####
  expe-db:
    image: mongo
    ports:
      - "$EXPE_DB_PORT:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_INITDB_ROOT_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_INITDB_ROOT_PASSWORD
    volumes:
      - "./ExpeDB/saved_data:/data/db"
  expe-db-api:
    build: ./ExpeDB/API
    environment:
      MONGODB_HOST: expe-db
      MONGODB_PORT: $EXPE_DB_PORT
    ports:
      - "$EXPE_DB_API_PORT:80"
    volumes: 
      - "./ExpeDB/API/flask_app:/usr/src/flask_app"
    links:
      - expe-db
    profiles:
      - prod
##### AUTODISC SERVER #####
  autodisc-server:
    build: 
      context: ../
      dockerfile: services/AutoDiscServer/Dockerfile
    environment:
      EXPEDB_CALLER_HOST: expe-db-api 
      EXPEDB_CALLER_PORT: $EXPE_DB_API_PORT
      APPDB_CALLER_HOST: app-db-api
      APPDB_CALLER_PORT: $APP_DB_API_PORT
      SSH_CONFIG_FILE: $SSH_CONFIG_FILE
    ports:
      - "$AUTODISC_SERVER_PORT:80"
    volumes: 
      - "./AutoDiscServer/flask_app:/usr/src/services/AutoDiscServer/flask_app"
      - "../libs/auto_disc:/usr/src/libs/auto_disc"
      - "../configs:/usr/src/configs"
    links:
      - expe-db-api
      - app-db-api
    profiles:
      - prod
##### FRONTEND APP #####
  app:
    build: ./FrontEndApp
    ports:
      - "$APP_PORT:80"
    volumes:
      - "./FrontEndApp/angular_app:/usr/src/angular_app"
    profiles:
      - prod
##### MONITORING TOOLS #####
  portainer:
    image: portainer/portainer-ce:2.11.1
    profiles:
      - monitoring
    ports:
      - "$PORTAINER_PORT:8000"
      - "$PORTAINER_HTTPS_PORT:9443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./Utils/portainer_data:/data"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
  app-db-monitoring:
    image: dpage/pgadmin4
    profiles:
      - monitoring
    ports: 
      - "$PGADMIN_PORT:5050"
    environment:
      PGADMIN_LISTEN_PORT: 5050 
      PGADMIN_DEFAULT_EMAIL: $PGADMIN_DEFAULT_EMAIL
      PGADMIN_DEFAULT_PASSWORD: $PGADMIN_DEFAULT_PASSWORD
    volumes:
      - "./Utils/pgadmin_mapping/servers.json:/pgadmin4/servers.json"
    depends_on:
      - app-db
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s
  mongo-express:
    image: mongo-express
    profiles:
      - monitoring
    ports:
      - "$MONGO_EXPRESS_PORT:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: expe-db
      ME_CONFIG_MONGODB_PORT: $EXPE_DB_PORT
      ME_CONFIG_MONGODB_ADMINUSERNAME: $MONGO_INITDB_ROOT_USERNAME
      ME_CONFIG_MONGODB_ADMINPASSWORD: $MONGO_INITDB_ROOT_PASSWORD
    depends_on:
      - expe-db
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s